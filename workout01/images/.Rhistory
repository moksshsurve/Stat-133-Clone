cellphone = 80
transportation = 20
cellphone+transportation
cellphone = 80
transportation = 20
groceries = 527
gym = 10
rent = 1500
other = 83
total = cellphone + transportation + groceries + gym + rent + other
total
cellphone = 80
transportation = 20
groceries = 527
gym = 10
rent = 1500
other = 83
total = cellphone + transportation + groceries + gym + rent + other
total
months_sem = 5
total_semester = months_sem*total
months_year = 10
total_year = months_year*total
expenses = c(cellphone, transportation, groceries, gym, rent, other)
barplot(expenses)
sort(expenses, decreasing = FALSE)
cellphone = 80
transportation = 20
groceries = 527
gym = 10
rent = 1500
other = 83
total = cellphone + transportation + groceries + gym + rent + other
total
months_sem = 5
total_semester = months_sem*total
months_year = 10
total_year = months_year*total
expenses = c(cellphone, transportation, groceries, gym, rent, other)
barplot(expenses)
sorted = sort(expenses, decreasing = FALSE)
barplot(sorted)
cellphone = 80
transportation = 20
groceries = 527
gym = 10
rent = 1500
other = 83
total = cellphone + transportation + groceries + gym + rent + other
total
months_sem = 5
total_semester = months_sem*total
months_year = 10
total_year = months_year*total
expenses = c(cellphone, transportation, groceries, gym, rent, other)
barplot(expenses)
sorted = sort(expenses, decreasing = FALSE)
barplot(sorted, names.arg = TRUE)
cellphone = 80
transportation = 20
groceries = 527
gym = 10
rent = 1500
other = 83
total = cellphone + transportation + groceries + gym + rent + other
total
months_sem = 5
total_semester = months_sem*total
months_year = 10
total_year = months_year*total
expenses = c(cellphone, transportation, groceries, gym, rent, other)
barplot(expenses)
sorted = sort(expenses, decreasing = FALSE)
barplot(sorted, names.arg = c("gym", "transportation", "cellphone", "other", "groceries", "rent"))
cellphone = 80
transportation = 20
groceries = 527
gym = 10
rent = 1500
other = 83
total = cellphone + transportation + groceries + gym + rent + other
total
months_sem = 5
total_semester = months_sem*total
months_year = 10
total_year = months_year*total
expenses = c(cellphone, transportation, groceries, gym, rent, other)
barplot(expenses)
sorted = sort(expenses, decreasing = FALSE)
barplot(sorted, names.arg = c("gym", "transportation", "phone", "other", "groceries", "rent"))
n=5
k=2
p=0.5
prob1 = (p^k) * (1-p)^k * (factorial(n)/(factorial(k)*factorial(n-k)))
prob2 = (p^k) * (1-p)^k * choose(n,k)
cat(prob1,prob2)
n=5
k=2
p=0.5
prob1 = (p^k) * (1-p)^k * (factorial(n)/(factorial(k)*factorial(n-k)))
prob2 = (p^k) * (1-p)^k * choose(n,k)
cat(prob1,prob2)
#fair die
n=10
k=3
p=1/6
prob_fairdie = (p^k) * (1-p)^k * choose(n,k)
?binomial
prob_fairdie = (p^k) * (1-p)^k * choose(n,k)
# remove existing objects
rm(list = ls())
# download RData file into your working directory
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = 'nba2018-salary-points.RData')
getwd()
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = '~/Desktop/nba2018-salary-points.RData')
getwd()
four[0]
# load data in your R session
load('nba2018-salary-points.RData')
# list the available objects with ls()
ls()
four <- head(player, n = 4)
four[0]
install.packages(c("ggplot2", "plotly"))
install.packages(c("TSA", "forecast", "ggplot2", "gridExtra"))
install.packages(c("dplyr", "ggplot2"))
install.packages(c("Rcpp", "readr"))
install.packages(c("Rcpp", "readr"))
install.packages("readr")
pwd()
sink(file = '/Users/moksshsurve/stat133-lab05/exports/mtcars-structure.txt')
str(mtcars, length=1)
# closing sinking operation
sink()
sink(file = '/Users/moksshsurve/stat133-lab05/exports/summary-mtcars.txt')
summary(mtcars)
# closing sinking operation
sink()
pwd
pwd()
getwd()
setwd("/Users/moksshsurve/Berkeley/Semesters/Sophomore/SPRING 19/Stat 153/Homeworks/HW2")
setwd("/Users/moksshsurve/Berkeley/Semesters/Sophomore/SPRING 19/Stat 153/Homeworks/HW2")
setwd("Berkeley/Semesters/Sophomore/SPRING 19/Stat 153/Homeworks/HW2")
setwd("~/Berkeley/Semesters/Sophomore/SPRING 19/Stat 153/Homeworks/HW2")
setwd("~/Berkeley")
getwd()
installr::installr()
sudo ln -s /usr/texbin/pdflatex /usr/bin/pdflatex
getwd()
2+8
w=6
w
?abs
abs?
5
temp <- c(1,2,'rr')
temp
tempp <- c(1,2,'rr', TRUE)
tempp
as.numeric('r')
as.numeric(r)
as.double(3)
as.integer(4)
as.integer(4.5)
as.integer(4.8)
a <- as.double(3)
b <- 3
typeof(a)
typeof(b)
as.logical(1)
as.logical(4)
as.logical(5)
as.logical(-5)
as.logical(0)
letters[1:4]
numbers[1:4]
letters
letters(0)
letters[0]
letters[1]
letters[26]
letters[27]
letters[-27]
letters[-2]
letters[-0]
letters[-1]
letters[-15]
x <- letters[1:5]
x[6] <- 'f'
x
x <- [x,'g']
x <- (x,'g')
x <- [1:10:2]
x <- (1:10:2)
x <- (1:2:20)
x <- 1:10
x
x <- [1,2,2,2,3,3,3,5,6,7,8,4,3,2]
x <- [c(1,2,2,2,3,3,3,5,6,7,8,4,3,2)]
x <- c(1,2,2,2,3,3,3,5,6,7,8,4,3,2)
x[x!=2]
x[x==2]
x[c(1,3)]
x[c(1,8)]
x[1,8]
x[(1,8)]
x[x=="2"]
x <- letters[1:5]
x
x['a']
x["a"]
x[c("a","b"]
x[c("a","b")]
x[TRUE]
c(1,2)+c(1,2)
c(1,2)+c(1,2,3)
c(1,2)+c(1,2,3,4)
c(1,2)+c(1,2,3)
c(1,2,3)+c(1,2)
b <- 1:8
B <- matrix(b,nrow=2,ncol=4)
B2 <- matrix(b,nrow=2,ncol=4, byrow=TRUE)
B
B2
B3 <- matrix(b,nrow=2,ncol=4, byrow=FALSE)
B3
size <- c('sm','md','lg')
SIZE <- factor(size)
size
SIZE
lst <- list(
c(1, 2, 3),
matrix(1:9, nrow = 3, ncol = 3),
list(1:2, c(TRUE, FALSE), c("a", "b")))
lst
lst[1]
lst[[1]]
lst[[2]]
lst[2]
lst[[1]][2]
lst[[2]][1]
t <- matrix(1:20,nrow=5,ncol=4)
t
t[2,2]
t[c(2,2)]
t[2:3,2:3]
t[c(2,3),c(2,3)]
t[c(2,3,4),c(2,3)]
t[-2,-2]
t[-2]
t[2,2]
t[-(2:3),-(2:3)]
t[odd,]
t[odds,]
x <- 5
if (NA) {x <- 6}
if (TRUE) {x <- 6}
X
x
if (FALSE) {x <- 8} else if (NA) {x <- 9}
if (NA) {x <- 8} else if (NA) {x <- 9}
if (TRUE) {x <- 8} else if (TRUE) {x <- 9}
x
$A = \pi * r^{2}$
1:5
1:8:2
1:2:8
getwd()
setwd("/Users/moksshsurve/Desktop/Documents/Berkeley/Semesters/Sophomore/SPRING\ 19/Stat\ 133/hw-stat133/workout01/images ")
setwd("/Users/moksshsurve/Desktop/Documents/Berkeley/Semesters/Sophomore/SPRING\ 19/Stat\ 133/hw-stat133/workout01/images")
getwd()
getwd()
setwd("/Users/moksshsurve/Desktop/Documents/Berkeley/Semesters/Sophomore/SPRING\ 19/Stat\ 133/hw-stat133/workout01/output")
effective_shooting <- as_tibble( arrange(mutate(summarise(group_by(mutate(select(combined_data, name, shot_made_flag), count = 1), name), total=n(), made = sum(shot_made_flag == "shot_yes")), percentage = made/total), desc(percentage)) )
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
effective_shooting <- as_tibble( arrange(mutate(summarise(group_by(mutate(select(combined_data, name, shot_made_flag), count = 1), name), total=n(), made = sum(shot_made_flag == "shot_yes")), percentage = made/total), desc(percentage)) )
combined_data <- read.csv("data/shots-data.csv", stringsAsFactors = FALSE)
getwd()
combined_data <- read.csv("/Users/moksshsurve/Desktop/Documents/Berkeley/Semesters/Sophomore/SPRING 19/Stat 133/hw-stat133/workout01/output/shots-data.csv", stringsAsFactors = FALSE)
combined_data <- read.csv("/Users/moksshsurve/Desktop/Documents/Berkeley/Semesters/Sophomore/SPRING 19/Stat 133/hw-stat133/workout01/data/shots-data.csv", stringsAsFactors = FALSE)
effective_shooting <- as_tibble( arrange(mutate(summarise(group_by(mutate(select(combined_data, name, shot_made_flag), count = 1), name), total=n(), made = sum(shot_made_flag == "shot_yes")), percentage = made/total), desc(percentage)) )
two_pt <- as_tibble( arrange(mutate(summarise(group_by(mutate(select(combined_data, name, shot_made_flag, shot_type), count = 1), name), total = sum(shot_type == "2PT Field Goal"), made = sum(shot_made_flag == "shot_yes" & shot_type == "2PT Field Goal")), percentage = made/total), desc(percentage)) )
three_pt <- as_tibble(arrange(mutate(summarise(group_by(mutate(select(combined_data, name, shot_made_flag, shot_type), count = 1), name), total = sum(shot_type == "3PT Field Goal"), made = sum(count[shot_made_flag == "shot_yes" & shot_type == "3PT Field Goal"])), percentage = made/total), desc(percentage)))
a
a
getwd()
knitr::opts_knit$set(root.dir = "/Users/moksshsurve/Desktop/Documents/Berkeley/Semesters/Sophomore/SPRING\ 19/Stat\ 133/hw-stat133/workout01")
library(dplyr)
library(ggplot2)
combined_data <- read.csv("/Users/moksshsurve/Desktop/Documents/Berkeley/Semesters/Sophomore/SPRING 19/Stat 133/hw-stat133/workout01/data/shots-data.csv", stringsAsFactors = FALSE)
#5.1
#Effective Shooting % by Player
effective_shooting <- as_tibble( arrange(mutate(summarise(group_by(mutate(select(combined_data, name, shot_made_flag), count = 1), name), total=n(), made = sum(shot_made_flag == "shot_yes")), percentage = made/total), desc(percentage)) )
effective_shooting
#2PT Effective Shooting % by Player
two_pt <- as_tibble( arrange(mutate(summarise(group_by(mutate(select(combined_data, name, shot_made_flag, shot_type), count = 1), name), total = sum(shot_type == "2PT Field Goal"), made = sum(shot_made_flag == "shot_yes" & shot_type == "2PT Field Goal")), percentage = made/total), desc(percentage)) )
two_pt
#3PT Effective Shooting % by Player
three_pt <- as_tibble(arrange(mutate(summarise(group_by(mutate(select(combined_data, name, shot_made_flag, shot_type), count = 1), name), total = sum(shot_type == "3PT Field Goal"), made = sum(count[shot_made_flag == "shot_yes" & shot_type == "3PT Field Goal"])), percentage = made/total), desc(percentage)))
three_pt
library(ggplot2)
### ---------------------------
#Title: Shots Charts Script
#Description: Generate Visuals for the 5 GSW Players' Shots
#Inputs: GSW Shot Data (combined and for individual players), court image
#Outputs: PDFs containing shot chart visuals for GSW players
### ---------------------------
#4) Shot Charts
library(jpeg)
library(grid)
library(ggplot2)
setwd("/Users/moksshsurve/Desktop/Documents/Berkeley/Semesters/Sophomore/SPRING\ 19/Stat\ 133/hw-stat133/workout01/data")
iguodala = read.csv("andre-iguodala.csv", stringsAsFactors = FALSE)
green = read.csv("draymond-green.csv", stringsAsFactors = FALSE)
durant = read.csv("kevin-durant.csv", stringsAsFactors = FALSE)
thompson = read.csv("klay-thompson.csv", stringsAsFactors = FALSE)
curry <- read.csv("stephen-curry.csv", stringsAsFactors = FALSE)
setwd("/Users/moksshsurve/Desktop/Documents/Berkeley/Semesters/Sophomore/SPRING\ 19/Stat\ 133/hw-stat133/workout01/images")
court_file <- "nba-court.jpg"
court_image <- rasterGrob( readJPEG(court_file), width = unit(1, "npc"), height = unit(1, "npc"))
#4.1) Shot charts for each player
iguodala_shot_chart <- ggplot(data = iguodala) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color=shot_made_flag)) + ylim(-50, 420) + ggtitle("Shot Chart: Andre Iguodala (2016 Season)") + theme_minimal()
green_shot_chart <- ggplot(data = green) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color=shot_made_flag)) + ylim(-50, 420) + ggtitle("Shot Chart: Draymond Green (2016 Season)") + theme_minimal()
durant_shot_chart <- ggplot(data = durant) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color=shot_made_flag)) + ylim(-50, 420) + ggtitle("Shot Chart: Kevin Durant (2016 Season)") + theme_minimal()
thompson_shot_chart <- ggplot(data = thompson) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color =shot_made_flag)) + ylim(-50, 420) + ggtitle("Shot Chart: Klay Thompson (2016 Season)") + theme_minimal()
curry_shot_chart <- ggplot(data = curry) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color=shot_made_flag)) + ylim(-50, 420) + ggtitle("Shot Chart: Steph Curry (2016 Season)") + theme_minimal()
ggsave("andre-iguodala-shot-chart.pdf", plot = iguodala_shot_chart, width = 6.5, height = 5)
ggsave("draymond-green-shot-chart.pdf", plot = green_shot_chart, width = 6.5, height = 5)
ggsave("kevin-durant-shot-chart.pdf", plot = durant_shot_chart, width = 6.5, height = 5)
ggsave("klay-thompson-shot-chart.pdf", plot = thompson_shot_chart, width = 6.5, height = 5)
ggsave("stephen-curry-shot-chart.pdf", plot = curry_shot_chart, width = 6.5, height = 5)
#4.2) Facetted Shot chart
gsw_shots_chart = ggplot(data = shots_table) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color=shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Charts: GSW (2016 season)') + theme_minimal() + facet_wrap(~ name, ncol = 3)
ggsave("gsw_shots_chart.pdf", width = 8 , height = 7)
ggsave("gsw_shots_chart.png", width = 8, height = 7)
### ---------------------------
#Title: Shots Charts Script
#Description: Generate Visuals for the 5 GSW Players' Shots
#Inputs: GSW Shot Data (combined and for individual players), court image
#Outputs: PDFs containing shot chart visuals for GSW players
### ---------------------------
#4) Shot Charts
library(jpeg)
library(grid)
library(ggplot2)
setwd("/Users/moksshsurve/Desktop/Documents/Berkeley/Semesters/Sophomore/SPRING\ 19/Stat\ 133/hw-stat133/workout01/data")
iguodala = read.csv("andre-iguodala.csv", stringsAsFactors = FALSE)
green = read.csv("draymond-green.csv", stringsAsFactors = FALSE)
durant = read.csv("kevin-durant.csv", stringsAsFactors = FALSE)
thompson = read.csv("klay-thompson.csv", stringsAsFactors = FALSE)
curry <- read.csv("stephen-curry.csv", stringsAsFactors = FALSE)
setwd("/Users/moksshsurve/Desktop/Documents/Berkeley/Semesters/Sophomore/SPRING\ 19/Stat\ 133/hw-stat133/workout01/images")
court_file <- "nba-court.jpg"
court_image <- rasterGrob( readJPEG(court_file), width = unit(1, "npc"), height = unit(1, "npc"))
#4.1) Shot charts for each player
iguodala_shot_chart <- ggplot(data = iguodala) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color=shot_made_flag)) + ylim(-50, 420) + ggtitle("Shot Chart: Andre Iguodala (2016 Season)") + theme_minimal()
green_shot_chart <- ggplot(data = green) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color=shot_made_flag)) + ylim(-50, 420) + ggtitle("Shot Chart: Draymond Green (2016 Season)") + theme_minimal()
durant_shot_chart <- ggplot(data = durant) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color=shot_made_flag)) + ylim(-50, 420) + ggtitle("Shot Chart: Kevin Durant (2016 Season)") + theme_minimal()
thompson_shot_chart <- ggplot(data = thompson) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color =shot_made_flag)) + ylim(-50, 420) + ggtitle("Shot Chart: Klay Thompson (2016 Season)") + theme_minimal()
curry_shot_chart <- ggplot(data = curry) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color=shot_made_flag)) + ylim(-50, 420) + ggtitle("Shot Chart: Steph Curry (2016 Season)") + theme_minimal()
ggsave("andre-iguodala-shot-chart.pdf", plot = iguodala_shot_chart, width = 6.5, height = 5)
ggsave("draymond-green-shot-chart.pdf", plot = green_shot_chart, width = 6.5, height = 5)
ggsave("kevin-durant-shot-chart.pdf", plot = durant_shot_chart, width = 6.5, height = 5)
ggsave("klay-thompson-shot-chart.pdf", plot = thompson_shot_chart, width = 6.5, height = 5)
ggsave("stephen-curry-shot-chart.pdf", plot = curry_shot_chart, width = 6.5, height = 5)
#4.2) Facetted Shot chart
gsw_shots_chart = ggplot(data = combined_data) + annotation_custom(court_image, -250, 250, -50, 420) + geom_point(aes(x=x, y=y, color=shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Charts: GSW (2016 season)') + theme_minimal() + facet_wrap(~ name, ncol = 3)
ggsave("gsw_shots_chart.pdf", width = 8 , height = 7)
ggsave("gsw_shots_chart.png", width = 8, height = 7)
